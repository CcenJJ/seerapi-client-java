plugins {
    id 'java-library'
    id 'checkstyle'
    id "com.github.spotbugs" version "4.2.1"
    id 'signing'
    id "de.marcphilipp.nexus-publish" version "0.4.0"
    id "io.codearte.nexus-staging" version "0.21.2"
    id 'com.adarshr.test-logger' version '2.0.0'
    id "com.github.ben-manes.versions" version "0.28.0"
}

group = 'com.imsweb'
version = '3.18.2'
description = 'Java client library for SEER*API'

// externally defined properties
def nexusUsername = project.findProperty('nexusUsername') ?: ''
def nexusPassword = project.findProperty('nexusPassword') ?: ''
def signingKey = project.findProperty('signingKey') ?: ''
def signingPassword = project.findProperty('signingPassword') ?: ''

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:all" << "-Xlint:-serial" << "-Werror"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar, sourcesJar
}

repositories {
    mavenCentral()
}

dependencies {
    spotbugs 'com.github.spotbugs:spotbugs:4.0.3'

    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-jackson:2.9.0'

    testImplementation 'junit:junit:4.13'
    testImplementation 'org.assertj:assertj-core:3.16.1'
}

jar {
    // specify the archive name; otherwise the version is appended to the war file
    archiveFileName = 'seerapi-java.jar'

    manifest {
        attributes('Implementation-Title': 'SEER*API Java Client',
                'Implementation-Version': archiveVersion,
                'Implementation-Vendor': group,
                'Created-By': System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Automatic-Module-Name': 'com.imsweb.seerapi.client'
        )
    }
}

checkstyle {
    toolVersion '8.28'
    configFile = file("config/checkstyle/checkstyle.xml")
}

spotbugs {
    excludeFilter = file('config/spotbugs/spotbugs-exclude.xml')
}

// when checking for later versions, exclude alphas, betas, etc..
dependencyUpdates {
    resolutionStrategy {
        componentSelection { rules ->
            rules.all { ComponentSelection selection ->
                boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                    selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
                }
                if (rejected) {
                    selection.reject('Release candidate')
                }
            }
        }
    }
}

wrapper {
    gradleVersion = '6.4.1'
    distributionType = Wrapper.DistributionType.ALL
}

// don't try to release a snapshot to a non-snapshot repository, that won't work anyway
//if (version.endsWith('-SNAPSHOT')) {
//    gradle.startParameter.excludedTaskNames += 'signMavenJavaPublication'
//    gradle.startParameter.excludedTaskNames += 'closeAndReleaseRepository'
//}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'seerapi-client-java'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'SEER*API Java Client'
                description = 'API mapping for SEER*API in Java'
                url = 'https://github.com/imsweb/seerapi-client-java'
                inceptionYear = '2014'
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'ctmay4'
                        name = 'Chuck May'
                        email = 'mayc@imsweb.com'
                    }
                    developer {
                        id = 'depryf'
                        name = 'Fabian Depry'
                        email = 'depryf@imsweb.com'
                    }
                }
                scm {
                    url = 'https://github.com/imsweb/seerapi-client-java'
                    connection = 'scm:https://github.com/imsweb/seerapi-client-java.git'
                    developerConnection = 'scm:git@github.com:imsweb/seerapi-client-java.git'
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(signingKey, signingPassword)

    sign publishing.publications
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

// configure nexus staging plugin
nexusStaging {
    numberOfRetries = 50
    delayBetweenRetriesInMillis = 5000
}

if (nexusUsername) {
    nexusPublishing {
        repositories {
            sonatype {
                nexusUrl = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
                snapshotRepositoryUrl = uri("https://oss.sonatype.org/content/repositories/snapshots/")
                username = nexusUsername
                password = nexusPassword
            }
        }
        connectTimeout = Duration.ofSeconds(360)
        clientTimeout = Duration.ofSeconds(360)
    }

    nexusStaging {
        packageGroup = "com.imsweb"
        stagingProfileId = "seerapi-client-java"
        username = nexusUsername
        password = nexusPassword
    }
}